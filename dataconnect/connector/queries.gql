query ListUsers @auth(level: USER insecureReason: "Handled by code") {
  users {
    id
    username
    handle
    email
    avatar
    description
  }
}

query GetUser($id: String!) @auth(level: USER insecureReason: "Handled by code") {
  user(key: { id: $id }) {
    id
    username
    email
    handle
    avatar
    description
  }
}

query ListRoleplays @auth(level: USER insecureReason: "Handled by code") {
  roleplays {
    id
    title
    description
    illustration
  }
}

query ListRoleplaysForUser($userId: String!) @auth(level: USER insecureReason: "Handled by code") {
  roleplays(where: { user: { id: { eq: $userId } } }) {
    id
    title
    description
    illustration
  }
}

query GetRoleplay($id: UUID!) @auth(level: USER insecureReason: "Handled by code") {
  roleplay(key: { id: $id }) {
    id
    title
    description
    illustration
    messageBoard
    startDate
    roles: roles_on_roleplay  {
      name
      maxUsers
      description
      isFree
    }
  }
}

query ListAvailabilities @auth(level: USER insecureReason: "Handled by code") {
    availabilities {
        id
        pattern
        daysOfWeek
        startDate
        endDate
        type
        kind
        startTime
        endTime
        user {
            id
            username
            handle
        }
    }
}

query GetAvailabilityForUser($userId: String!) @auth(level: USER insecureReason: "Handled by code") {
    availabilities(where: { user: { id: { eq: $userId } } }) {
        id
        pattern
        daysOfWeek
        startDate
        endDate
        type
        kind
        startTime
        endTime
        user {
            id
            username
            handle
        }
    }
}